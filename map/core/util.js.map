{"version":3,"sources":["core/util.coffee"],"names":[],"mappings":"AAAA,IAAA,UAAA;;AAAA,QAAQ,CAAA,SAAE,CAAA,QAAV,GAAqB,SAAC,IAAD,EAAO,IAAP,GAAA;SACnB,MAAM,CAAC,cAAP,CAAsB,IAAC,CAAA,SAAvB,EAAkC,IAAlC,EAAwC,IAAxC,EADmB;AAAA,CAArB,CAAA;;AAAA,MAGM,CAAC,OAAO,CAAC,UAAf,GACM;AACS,EAAA,oBAAE,UAAF,GAAA;AACX,IADY,IAAC,CAAA,aAAA,UACb,CAAA;AAAA,IAAA,IAAC,CAAA,IAAD,GAAQ,EAAR,CAAA;AAAA,IACA,IAAC,CAAA,KAAD,GAAS,EADT,CAAA;AAAA,IAEA,IAAC,CAAA,OAAD,GAAW,EAFX,CADW;EAAA,CAAb;;AAAA,uBAKA,GAAA,GAAK,SAAC,GAAD,GAAA;AACH,WAAO,GAAA,IAAO,IAAC,CAAA,IAAf,CADG;EAAA,CALL,CAAA;;AAAA,uBAQA,GAAA,GAAK,SAAC,GAAD,GAAA;AAEH,WAAO,IAAC,CAAA,OAAQ,CAAA,IAAC,CAAA,IAAK,CAAA,GAAA,CAAN,CAAhB,CAFG;EAAA,CARL,CAAA;;AAAA,uBAcA,IAAA,GAAM,SAAC,IAAD,GAAA;AACJ,QAAA,GAAA;AAAA,IAAA,GAAA,GAAM,IAAC,CAAA,UAAD,CAAY,IAAZ,CAAN,CAAA;AAAA,IACA,IAAC,CAAA,KAAK,CAAC,IAAP,CAAY,GAAZ,CADA,CAAA;AAAA,IAEA,IAAC,CAAA,OAAO,CAAC,IAAT,CAAc,IAAd,CAFA,CAAA;WAGA,IAAC,CAAA,IAAK,CAAA,GAAA,CAAN,GAAa,IAAC,CAAA,OAAO,CAAC,MAAT,GAAkB,EAJ3B;EAAA,CAdN,CAAA;;AAAA,uBAsBA,MAAA,GAAQ,SAAC,GAAD,GAAA;AACN,UAAU,IAAA,KAAA,CAAM,4BAAN,CAAV,CADM;EAAA,CAtBR,CAAA;;AAAA,uBAyBA,IAAA,GAAM,SAAC,QAAD,GAAA;AACJ,QAAA,8BAAA;AAAA;AAAA;SAAA,mDAAA;kBAAA;AACE,qDAAA,SAAU,GAAG,YAAb,CADF;AAAA;oBADI;EAAA,CAzBN,CAAA;;AAAA,uBA6BA,MAAA,GAAQ,SAAC,CAAD,GAAA;AACN,QAAA,8BAAA;AAAA,IAAA,QAAA,GAAW,EAAX,CAAA;AACA;AAAA,SAAA,mDAAA;kBAAA;AACE,MAAA,8BAAG,EAAG,GAAG,WAAT;AACE,QAAA,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAA,CADF;OADF;AAAA,KADA;AAIA,WAAO,QAAP,CALM;EAAA,CA7BR,CAAA;;AAAA,EAoCA,UAAC,CAAA,QAAD,CAAU,QAAV,EACE;AAAA,IAAA,GAAA,EAAK,SAAA,GAAA;aAAG,IAAC,CAAA,QAAJ;IAAA,CAAL;GADF,CApCA,CAAA;;AAAA,EAuCA,UAAC,CAAA,QAAD,CAAU,MAAV,EACE;AAAA,IAAA,GAAA,EAAK,SAAA,GAAA;aAAG,IAAC,CAAA,MAAJ;IAAA,CAAL;GADF,CAvCA,CAAA;;AAAA,EA0CA,UAAC,CAAA,QAAD,CAAU,QAAV,EACE;AAAA,IAAA,GAAA,EAAK,SAAA,GAAA;aAAG,IAAC,CAAA,OAAO,CAAC,OAAZ;IAAA,CAAL;GADF,CA1CA,CAAA;;oBAAA;;IALF,CAAA","file":"core/util.js","sourceRoot":"/source/","sourcesContent":["Function::property = (prop, desc) ->\r\n  Object.defineProperty @prototype, prop, desc\r\n\r\nmodule.exports.OrderedMap =\r\nclass OrderedMap\r\n  constructor: (@key_getter) ->\r\n    @_map = {}\r\n    @_keys = []\r\n    @_values = []\r\n\r\n  has: (key) ->\r\n    return key of @_map\r\n\r\n  get: (key) ->\r\n    # TODO: throw error\r\n    return @_values[@_map[key]]\r\n\r\n  # set: (key, value) ->\r\n\r\n  push: (elem) ->\r\n    key = @key_getter(elem)\r\n    @_keys.push key\r\n    @_values.push elem\r\n    @_map[key] = @_values.length - 1\r\n\r\n  # pop: () ->\r\n\r\n  remove: (key) ->\r\n    throw new Error(\"Too lazy. Not implemented.\")\r\n\r\n  each: (iterator) ->\r\n    for v, i in @_values\r\n      iterator? v, i\r\n\r\n  filter: (f) ->\r\n    filtered = []\r\n    for v, i in @_values\r\n      if f? v, i\r\n        filtered.push v\r\n    return filtered\r\n\r\n  @property 'values',\r\n    get: -> @_values\r\n\r\n  @property 'keys',\r\n    get: -> @_keys\r\n\r\n  @property 'length',\r\n    get: -> @_values.length\r\n"]}