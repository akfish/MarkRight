{"version":3,"sources":["util/spec-loader.coffee"],"names":[],"mappings":"AAAA,IAAA,0CAAA;;AAAA,EAAA,GAAK,OAAA,CAAQ,IAAR,CAAL,CAAA;;AAAA,UACA,GAAa,qDADb,CAAA;;AAAA,UAGA,GAAa,SAAC,GAAD,GAAA;AACX,MAAA,0DAAA;AAAA,EAAA,QAAA,GAAW,GACT,CAAC,OADQ,CACA,QADA,EACU,IADV,CAET,CAAC,OAFQ,CAEA,+BAFA,EAEiC,EAFjC,CAAX,CAAA;AAAA,EAIA,eAAA,GAAkB,EAJlB,CAAA;AAAA,EAKA,OAAA,GAAU,CALV,CAAA;AAAA,EAMA,eAAA,GAAkB,CANlB,CAAA;AAAA,EAOA,KAAA,GAAQ,EAPR,CAAA;AAAA,EASA,QAAQ,CAAC,OAAT,CAAiB,UAAjB,EAA6B,SAAC,CAAD,EAAI,EAAJ,EAAQ,IAAR,EAAc,OAAd,GAAA;AAC3B,IAAA,IAAG,eAAH;AACE,MAAA,eAAA,GAAkB,OAAlB,CAAA;AACA,MAAA,IAAO,sBAAP;AACE,QAAA,KAAM,CAAA,OAAA,CAAN,GAAiB,EAAjB,CADF;OADA;aAGA,eAAA,GAAkB,EAJpB;KAAA,MAAA;AAME,MAAA,eAAA,EAAA,CAAA;AAAA,MACA,OAAA,EADA,CAAA;aAEA,KAAM,CAAA,eAAA,CAAgB,CAAC,IAAvB,CACE;AAAA,QAAA,EAAA,EAAI,EAAJ;AAAA,QACA,IAAA,EAAM,IADN;AAAA,QAEA,OAAA,EAAS,eAFT;AAAA,QAGA,UAAA,EAAY,eAHZ;AAAA,QAIA,EAAA,EAAI,OAJJ;OADF,EARF;KAD2B;EAAA,CAA7B,CATA,CAAA;AAAA,EAwBA,KAAK,CAAC,KAAN,GAAc,OAxBd,CAAA;AAyBA,SAAO,KAAP,CA1BW;AAAA,CAHb,CAAA;;AAAA,IA+BA,GAAO,SAAC,SAAD,EAAY,EAAZ,GAAA;SAEL,EAAE,CAAC,QAAH,CAAY,SAAZ,EAAuB,MAAvB,EAA+B,SAAC,GAAD,EAAM,IAAN,GAAA;AAC7B,QAAA,KAAA;AAAA,IAAA,IAAG,WAAH;;QACE,GAAI;OADN;KAAA;AAAA,IAGA,KAAA,GAAQ,UAAA,CAAW,IAAX,CAHR,CAAA;sCAMA,GAAI,MAAM,gBAPmB;EAAA,CAA/B,EAFK;AAAA,CA/BP,CAAA;;AAAA,QA0CA,GAAW,SAAC,SAAD,GAAA;AAET,MAAA,WAAA;AAAA,EAAA,IAAA,GAAO,EAAE,CAAC,YAAH,CAAgB,SAAhB,EAA2B,MAA3B,CAAP,CAAA;AAAA,EACA,KAAA,GAAQ,UAAA,CAAW,IAAX,CADR,CAAA;AAGA,SAAO,KAAP,CALS;AAAA,CA1CX,CAAA;;AAAA,MAiDM,CAAC,OAAP,GACE;AAAA,EAAA,IAAA,EAAM,IAAN;AAAA,EACA,QAAA,EAAU,QADV;CAlDF,CAAA","file":"util/spec-loader.js","sourceRoot":"/source/","sourcesContent":["fs = require 'fs'\ntest_regex = /^\\.\\n([\\s\\S]*?)^\\.\\n([\\s\\S]*?)^\\.$|^#{1,6} *(.*)$/gm\n\nparse_spec = (src) ->\n  spec_src = src\n    .replace(/\\r\\n?/g, \"\\n\")\n    .replace(/^<!-- END TESTS -->(.|[\\n])*/m, '')\n\n  current_section = \"\"\n  test_id = 0\n  test_section_id = 0\n  specs = {}\n\n  spec_src.replace test_regex, (_, md, html, section) ->\n    if section?\n      current_section = section\n      if not specs[section]?\n        specs[section] = []\n      test_section_id = 0\n    else\n      test_section_id++\n      test_id++\n      specs[current_section].push\n        md: md\n        html: html\n        section: current_section\n        section_id: test_section_id\n        id: test_id\n  specs.count = test_id\n  return specs\n\nload = (spec_file, cb) ->\n  # console.log \"Loading spec from '#{spec_file}'\"\n  fs.readFile spec_file, 'utf8', (err, data) ->\n    if err?\n      cb? err\n\n    specs = parse_spec(data)\n    # console.log \"Loaded #{tests.length} specs\"\n\n    cb? null, specs\n\nloadSync = (spec_file) ->\n  # console.log \"Loading spec from '#{spec_file}'\"\n  data = fs.readFileSync spec_file, 'utf8'\n  specs = parse_spec(data)\n  # console.log \"Loaded #{tests.length} specs\"\n  return specs\n\nmodule.exports =\n  load: load\n  loadSync: loadSync\n"]}